[{"/home/ec2-user/environment/QuanLe_ITSS/src/index.js":"1","/home/ec2-user/environment/QuanLe_ITSS/src/App.js":"2","/home/ec2-user/environment/QuanLe_ITSS/src/reportWebVitals.js":"3","/home/ec2-user/environment/QuanLe_ITSS/src/components/Todo.js":"4","/home/ec2-user/environment/QuanLe_ITSS/src/components/TodoItem.js":"5","/home/ec2-user/environment/QuanLe_ITSS/src/components/Input.js":"6","/home/ec2-user/environment/QuanLe_ITSS/src/components/Filter.js":"7","/home/ec2-user/environment/QuanLe_ITSS/src/hooks/fbStorage.js":"8","/home/ec2-user/environment/QuanLe_ITSS/src/lib/util.js":"9","/home/ec2-user/environment/QuanLe_ITSS/src/lib/firebase.js":"10"},{"size":500,"mtime":1621587148075,"results":"11","hashOfConfig":"12"},{"size":274,"mtime":1621587148075,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1621587148075,"results":"14","hashOfConfig":"12"},{"size":2248,"mtime":1621589839915,"results":"15","hashOfConfig":"12"},{"size":389,"mtime":1621587148075,"results":"16","hashOfConfig":"12"},{"size":806,"mtime":1621587148075,"results":"17","hashOfConfig":"12"},{"size":908,"mtime":1621587148075,"results":"18","hashOfConfig":"12"},{"size":1061,"mtime":1621590031347,"results":"19","hashOfConfig":"12"},{"size":68,"mtime":1621587148075,"results":"20","hashOfConfig":"12"},{"size":1388,"mtime":1621589698040,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"k4owb7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/QuanLe_ITSS/src/index.js",[],["46","47"],"/home/ec2-user/environment/QuanLe_ITSS/src/App.js",[],"/home/ec2-user/environment/QuanLe_ITSS/src/reportWebVitals.js",[],"/home/ec2-user/environment/QuanLe_ITSS/src/components/Todo.js",["48","49","50"],"import React, { useState } from 'react';\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\n// import useStorage from '../hooks/storage';\nimport useFbStorage from '../hooks/fbStorage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  // const [items, putItems, clearItems] = useStorage();\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\n\n  const [filter, setFilter] = React.useState('ALL');\n\n  const displayItems = items.filter(item => {\n    if (filter === 'ALL') return true;\n    if (filter === 'TODO') return !item.done;\n    if (filter === 'DONE') return item.done;\n  });\n\n  const handleCheck = checked => {\n    // const newItems = items.map(item => {\n    //   if (item.key === checked.key) {\n    //     item.done = !item.done;\n    //   }\n    //   return item;\n    // });\n    // putItems(newItems);\n    updateItem(checked);\n  };\n\n  const handleAdd = text => {\n    // putItems([...items, { key: getKey(), text, done: false }]);\n    addItem({ text, done: false });\n  };\n\n  const handleFilterChange = value => setFilter(value);\n  \n  return (\n    <article class=\"panel is-danger\">\n      <div className=\"panel-heading\">\n        <span class=\"icon-text\">\n          <span class=\"icon\">\n            <i class=\"fas fa-calendar-check\"></i>\n          </span>\n          <span> ITSS Todoアプリ</span>\n        </span>\n      </div>\n      <Input onAdd={handleAdd} />\n      <Filter\n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem \n          key={item.id}\n          item={item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {displayItems.length} items\n      </div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </article>\n  );\n}\n\nexport default Todo;","/home/ec2-user/environment/QuanLe_ITSS/src/components/TodoItem.js",[],"/home/ec2-user/environment/QuanLe_ITSS/src/components/Input.js",["51"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\n\nfunction Input( { onAdd } ) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      onAdd(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <input\n        class=\"input\"\n        type=\"text\"\n        placeholder=\"Todoを入力してください\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/QuanLe_ITSS/src/components/Filter.js",["52","53","54"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter({ value, onChange }) {\n\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'ALL')}\n        className={value === 'ALL' ?  'is-active' : ''}\n      >全て</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'TODO')}\n        className={value === 'TODO' ?  'is-active' : ''}\n      >未完了</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'DONE')}\n        className={value === 'DONE' ?  'is-active' : ''}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/QuanLe_ITSS/src/hooks/fbStorage.js",["55"],"/home/ec2-user/environment/QuanLe_ITSS/src/lib/util.js",[],"/home/ec2-user/environment/QuanLe_ITSS/src/lib/firebase.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"64","line":20,"column":9,"nodeType":"62","messageId":"63","endLine":20,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":28,"column":42,"nodeType":"67","messageId":"68","endLine":28,"endColumn":44},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":16,"column":7,"nodeType":"71","endLine":20,"endColumn":8},{"ruleId":"69","severity":1,"message":"70","line":21,"column":7,"nodeType":"71","endLine":25,"endColumn":8},{"ruleId":"69","severity":1,"message":"70","line":26,"column":7,"nodeType":"71","endLine":30,"endColumn":8},{"ruleId":"65","severity":1,"message":"72","line":36,"column":20,"nodeType":"67","messageId":"73","endLine":36,"endColumn":22},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]